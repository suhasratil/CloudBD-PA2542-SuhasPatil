# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
#Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "base"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

Vagrant.configure('2') do |config|
config.vm.box = "ubuntu/xenial64"
#config.puppet_install.validate_version = false
config.puppet_install.puppet_version = :latest
config.puppet_install.install_url = 'https://gist.githubusercontent.com/petems/6723c2eedb9d32d7ad97/raw/990ff448f6430aa015e208668a3cecb3f1db0d4b/purge_old_install_new.sh' 
#config.vm.provision :puppet do |puppet|
#puppet.manifests_path = "my_manifests"
#puppet.manifest_file = "my_default.pp"
#end

 # config.vm.synced_folder ".", "/Users/suhaspatil/vagrant_getting_started/environments", type: "rsync"
#    rsync__exclude: ".git/"
config.vm.synced_folder ".", "/vagrant", type: "rsync"
#config.vm.synced_folder ".", "/Users/suhaspatil/vagrant_getting_started/environments", disabled: true

config.vm.provision :puppet do |pup|
pup.environment_path="environments"
pup.environment = "test"
pup.synced_folder_type = "rsync"
end


  config.vm.define "appserver" do |config|
config.vm.hostname = 'appserver'     
 config.vm.provider :digital_ocean do |provider, override|
        override.ssh.private_key_path = '~/.ssh/id_rsa'
       #override.vm.box = 'ubuntu/xenial64'
       #override.vm.box = 'digital_ocean'
       #override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
        override.nfs.functional = false
        provider.token = 'adf147f76912ca317d656b9573f5aa7f00ced11e92689f8a31543403567d'
        #provider.image = 'ubuntu-14-04-x64'
	provider.region = 'nyc1'
        provider.size = '512mb'
        provider.ssh_key_name = 'suhas'
      end
  end

config.vm.define "dbserver" do |config|
config.vm.hostname = 'dbserver'
      config.vm.provider :digital_ocean do |provider, override|
        override.ssh.private_key_path = '~/.ssh/id_rsa'
        #override.vm.box = 'digital_ocean'
        #override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
        override.nfs.functional = false
        provider.token = 'adf147f76912ca317d656b9573f5aa7f00ced11e92689f8a31543403567d'
        #provider.image = 'ubuntu-14-04-x64'
        provider.region = 'nyc3'
        provider.size = '512mb'
        provider.ssh_key_name = 'suhas'
      end
  end


 config.vm.define "web" do |web|
    web.vm.box = "hashicorp/precise64"
    web.vm.hostname ="webserver"
    web.vm.network :forwarded_port, guest: 80, host: 8080
  end
end
